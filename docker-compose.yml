services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck: # Проверка готовности БД перед запуском бэкенда
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend # Dockerfile из папки backend/
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      # код приложения (для Hot Reload)
      - ./backend/app:/app/app
      # Alembic (чтобы сгенерированные скрипты появились на хосте)
      - ./backend/alembic:/app/alembic
      - ./backend/alembic.ini:/app/alembic.ini
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:1.27.5-alpine3.21
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
#      - frontend

  minio:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    ports:
      - "9000:9000" # API
      - "9001:9001" # Console
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"

  prometheus:
    image: prom/prometheus:v3.6.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana-oss:11.5.8
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - prometheus

#  frontend:
#    build: ./frontend # Dockerfile из папки frontend/
#    restart: always
#    env_file:
#        - .env
#

volumes:
  postgres_data:
  minio_data:
  prometheus_data:
  grafana_data: